<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="uni">
    <insert id="insertUUIDUser" parameterType="UUIDUser">
-- SelectKey在Mybatis中是为了解决Insert数据时不支持主键自动生成的问题，他可以很随意的设置生成主键的方式。
-- keyProperty:selectKey 语句结果应该被设置的目标属性。
-- resultType:结果的类型。MyBatis 通常可以算出来,但是写上也没有问题。MyBatis 允许任何简单类型用作主键的类型,包括字符串。
-- order:这可以被设置为 BEFORE 或 AFTER。如果设置为 BEFORE,那么它会首先选择主键,设置 keyProperty 然后执行插入语句。
--       如果设置为 AFTER,那么先执行插入语句,然后是 selectKey 元素-这和如 Oracle 数据库相似,可以在插入语句中嵌入序列调用。
-- statementType:和前面的相 同,MyBatis 支持 STATEMENT ,PREPARED 和CALLABLE 语句的映射类型,
--       分别代表 PreparedStatement 和CallableStatement 类型。
        <selectKey order="BEFORE" resultType="string" keyProperty="id">
            select UUID()
        </selectKey>
        insert into uuid_user(id,mark) values (#{id},#{mark})
    </insert>
    <update id="updateUUIDUser" parameterType="string">
        update uuid_user set mark='python' where id=#{id}
    </update>
    <delete id="delUUIDUser" parameterType="string">
        delete from uuid_user where id=#{id}
    </delete>
</mapper>